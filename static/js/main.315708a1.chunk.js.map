{"version":3,"sources":["Component/Viewer.js","cornerstone/initCornerstone.js","App.js","index.js"],"names":["stack1","stack2","Viewer","state","activeViewportIndex","viewports","tools","name","mode","modeOptions","mouseButtonMask","imageIds","activeTool","imageIdIndex","isPlaying","frameRate","cornerstoneTools","external","cornerstone","Hammer","cornerstoneMath","init","textStyle","setFont","toolStyle","setToolWidth","toolColors","setToolColor","setActiveColor","store","touchProximity","cornerstoneWADOImageLoader","dicomParser","window","className","htmlFor","value","this","onChange","evt","setState","target","id","type","min","max","length","parseInt","defaultValue","selectedStack","readOnly","onClick","frameRateInput","Math","style","display","flexWrap","map","vp","minWidth","height","flex","setViewportActive","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.315708a1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport CornerstoneViewport from 'react-cornerstone-viewport';\r\nimport initCornerstone from \"../cornerstone/initCornerstone\";\r\n\r\nconst stack1 = [\r\n    'dicomweb://s3.amazonaws.com/lury/PTCTStudy/1.3.6.1.4.1.25403.52237031786.3872.20100510032220.7.dcm',\r\n    'dicomweb://s3.amazonaws.com/lury/PTCTStudy/1.3.6.1.4.1.25403.52237031786.3872.20100510032220.8.dcm',\r\n    'dicomweb://s3.amazonaws.com/lury/PTCTStudy/1.3.6.1.4.1.25403.52237031786.3872.20100510032220.9.dcm',\r\n    'dicomweb://s3.amazonaws.com/lury/PTCTStudy/1.3.6.1.4.1.25403.52237031786.3872.20100510032220.10.dcm',\r\n    'dicomweb://s3.amazonaws.com/lury/PTCTStudy/1.3.6.1.4.1.25403.52237031786.3872.20100510032220.11.dcm',\r\n    'dicomweb://s3.amazonaws.com/lury/PTCTStudy/1.3.6.1.4.1.25403.52237031786.3872.20100510032220.12.dcm',\r\n];\r\n\r\nconst stack2 = [\r\n    'dicomweb://s3.amazonaws.com/lury/PTCTStudy/1.3.6.1.4.1.25403.52237031786.3872.20100510032220.9.dcm',\r\n    'dicomweb://s3.amazonaws.com/lury/PTCTStudy/1.3.6.1.4.1.25403.52237031786.3872.20100510032220.10.dcm',\r\n    'dicomweb://s3.amazonaws.com/lury/PTCTStudy/1.3.6.1.4.1.25403.52237031786.3872.20100510032220.11.dcm',\r\n];\r\n\r\nclass Viewer extends Component {\r\n    state = {\r\n        activeViewportIndex: 0,\r\n        viewports: [0, 1, 2, 3],\r\n        tools: [\r\n            // Mouse\r\n            {\r\n                name: 'Wwwc',\r\n                mode: 'active',\r\n                modeOptions: { mouseButtonMask: 1 },\r\n            },\r\n            {\r\n                name: 'Zoom',\r\n                mode: 'active',\r\n                modeOptions: { mouseButtonMask: 2 },\r\n            },\r\n            {\r\n                name: 'Pan',\r\n                mode: 'active',\r\n                modeOptions: { mouseButtonMask: 4 },\r\n            },\r\n            'Length',\r\n            'Angle',\r\n            'Bidirectional',\r\n            'FreehandRoi',\r\n            'Eraser',\r\n            // Scroll\r\n            { name: 'StackScrollMouseWheel', mode: 'active' },\r\n            // Touch\r\n            { name: 'PanMultiTouch', mode: 'active' },\r\n            { name: 'ZoomTouchPinch', mode: 'active' },\r\n            { name: 'StackScrollMultiTouch', mode: 'active' },\r\n        ],\r\n        imageIds: stack1,\r\n        // FORM\r\n        activeTool: 'Wwwc',\r\n        imageIdIndex: 0,\r\n        isPlaying: false,\r\n        frameRate: 22,\r\n    };\r\n\r\n    componentWillMount() {\r\n        initCornerstone();\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div >\r\n                    {/* FORM */}\r\n                    <div className={'left'}>\r\n                        <form className=\"row\">\r\n                            {/* FIRST COLUMN */}\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"active-tool\">Active Tool:</label>\r\n                                    <select\r\n                                        value={this.state.activeTool}\r\n                                        onChange={evt =>\r\n                                            this.setState({ activeTool: evt.target.value })\r\n                                        }\r\n                                        className=\"form-control\"\r\n                                        id=\"active-tool\"\r\n                                    >\r\n                                        <option value=\"Wwwc\">Wwwc</option>\r\n                                        <option value=\"Zoom\">Zoom</option>\r\n                                        <option value=\"Pan\">Pan</option>\r\n                                        <option value=\"Length\">Length</option>\r\n                                        <option value=\"Angle\">Angle</option>\r\n                                        <option value=\"Bidirectional\">Bidirectional</option>\r\n                                        <option value=\"FreehandRoi\">Freehand</option>\r\n                                        <option value=\"Eraser\">Eraser</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"image-id-index\">Image ID Index:</label>\r\n                                    <input\r\n                                        type=\"range\"\r\n                                        min=\"0\"\r\n                                        max={this.state.imageIds.length - 1}\r\n                                        value={this.state.imageIdIndex}\r\n                                        onChange={evt =>\r\n                                            this.setState({ imageIdIndex: parseInt(evt.target.value) })\r\n                                        }\r\n                                        className=\"form-control\"\r\n                                        id=\"image-id-index\"\r\n                                    ></input>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"image-id-stack\">Image ID Stack:</label>\r\n                                    <select\r\n                                        defaultValue={1}\r\n                                        onChange={evt => {\r\n                                            const selectedStack =\r\n                                                parseInt(evt.target.value) === 1 ? stack1 : stack2;\r\n\r\n                                            this.setState({\r\n                                                imageIds: selectedStack,\r\n                                                imageIdIndex: 0,\r\n                                            });\r\n                                        }}\r\n                                        className=\"form-control\"\r\n                                        id=\"image-id-stack\"\r\n                                    >\r\n                                        <option value=\"1\">Stack 1</option>\r\n                                        <option value=\"2\">Stack 2</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            {/* SECOND COLUMN */}\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"active-viewport-index\">\r\n                                        Active Viewport Index:\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        readOnly={true}\r\n                                        value={this.state.activeViewportIndex}\r\n                                        className=\"form-control\"\r\n                                        id=\"active-viewport-index\"\r\n                                    ></input>\r\n                                </div>\r\n                                <div className=\"input-group\">\r\n                                    <span className=\"input-group-btn\">\r\n                                      <button\r\n                                          className=\"btn btn-default\"\r\n                                          type=\"button\"\r\n                                          onClick={() => {\r\n                                              this.setState({\r\n                                                  isPlaying: !this.state.isPlaying,\r\n                                              });\r\n                                          }}\r\n                                      >\r\n                                        {this.state.isPlaying ? 'Stop' : 'Start'}\r\n                                      </button>\r\n                                    </span>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        className=\"form-control\"\r\n                                        value={this.state.frameRate}\r\n                                        onChange={evt => {\r\n                                            const frameRateInput = parseInt(evt.target.value);\r\n                                            const frameRate = Math.max(Math.min(frameRateInput, 90), 1);\r\n\r\n                                            this.setState({ frameRate });\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n\r\n                <div className='right' style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                    {this.state.viewports.map(vp => (\r\n                        <CornerstoneViewport\r\n                            key={vp}\r\n                            style={{ minWidth:'40%', height: '460px', flex:1}}\r\n                            tools={this.state.tools}\r\n                            imageIds={this.state.imageIds}\r\n                            imageIdIndex={this.state.imageIdIndex}\r\n                            isPlaying={this.state.isPlaying}\r\n                            frameRate={this.state.frameRate}\r\n                            className={this.state.activeViewportIndex === vp ? 'active' : ''}\r\n                            activeTool={this.state.activeTool}\r\n                            setViewportActive={() => {\r\n                                this.setState({\r\n                                    activeViewportIndex: vp,\r\n                                });\r\n                            }}\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Viewer;\r\n","import dicomParser from 'dicom-parser';\r\nimport cornerstone from 'cornerstone-core';\r\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\r\nimport cornerstoneMath from 'cornerstone-math';\r\nimport cornerstoneTools from 'cornerstone-tools';\r\nimport Hammer from 'hammerjs';\r\n\r\nexport default function initCornerstone() {\r\n    // Cornertone Tools\r\n    cornerstoneTools.external.cornerstone = cornerstone;\r\n    cornerstoneTools.external.Hammer = Hammer;\r\n    cornerstoneTools.external.cornerstoneMath = cornerstoneMath;\r\n\r\n    //\r\n    cornerstoneTools.init();\r\n\r\n    // Preferences\r\n    const fontFamily =\r\n        'Work Sans, Roboto, OpenSans, HelveticaNeue-Light, Helvetica Neue Light, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif';\r\n    cornerstoneTools.textStyle.setFont(`16px ${fontFamily}`);\r\n    cornerstoneTools.toolStyle.setToolWidth(2);\r\n    cornerstoneTools.toolColors.setToolColor('rgb(255, 255, 0)');\r\n    cornerstoneTools.toolColors.setActiveColor('rgb(0, 255, 0)');\r\n\r\n    cornerstoneTools.store.state.touchProximity = 40;\r\n\r\n    // IMAGE LOADER\r\n    cornerstoneWADOImageLoader.external.cornerstone = cornerstone;\r\n    cornerstoneWADOImageLoader.external.dicomParser = dicomParser;\r\n\r\n\r\n    // Debug\r\n    window.cornerstone = cornerstone;\r\n    window.cornerstoneTools = cornerstoneTools;\r\n}\r\n","import React, { Component } from 'react';\nimport Viewer from './Component/Viewer.js';\n\nexport default class App extends Component {\n  render() {\n    return <Viewer />;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}